{"version":3,"file":"static/js/468.e4095037.chunk.js","mappings":"4KAyEA,MA4DA,EA5DeA,IAAgC,IAA/B,gBAAEC,EAAe,KAAEC,GAAMF,EACvC,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAASC,OAAOC,YAAc,MACvDC,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAS,IAGjDK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeA,KACnBP,EAAYE,OAAOC,YAAc,KAC7BD,OAAOC,WAAa,KAAKE,GAAgB,EAAM,EAIrD,OADAH,OAAOM,iBAAiB,SAAUD,GAC3B,IAAML,OAAOO,oBAAoB,SAAUF,EAAa,GAC9D,IAGH,MAGMG,EAAkBC,IACtBd,EAAgBc,GACZZ,GAAUM,GAAgB,EAAM,EAGtC,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAKmB,SAAUJ,UAAU,eAAcC,SAAC,qBAKzEf,GACCa,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAJ,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAmBG,QAjB1BG,IAAMd,GAAiBD,GAiBwB,aAAW,oBAAmBU,SACrFV,GAAeW,EAAAA,EAAAA,KAACK,EAAAA,IAAO,KAAML,EAAAA,EAAAA,KAACM,EAAAA,IAAM,OAGvCT,EAAAA,EAAAA,MAAA,MAAIC,UAAW,qBAAoBT,EAAe,OAAS,IAAKU,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAKwB,WAAWR,SAAC,YACnDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAKyB,eAAeT,SAAC,gBACvDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK0B,cAAcV,SAAC,eACtDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK2B,iBAAiBX,SAAC,kBACzDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK4B,aAAaZ,SAAC,cACrDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK6B,YAAYb,SAAC,mBAIxDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oBAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAKwB,WAAWR,SAAC,YACnDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAKyB,eAAeT,SAAC,gBACvDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK0B,cAAcV,SAAC,eACtDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK2B,iBAAiBX,SAAC,kBACzDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK4B,aAAaZ,SAAC,cACrDC,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMN,EAAeZ,EAAK6B,YAAYb,SAAC,iBAGpD,C","sources":["components/Navbar.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { FaBars, FaTimes } from 'react-icons/fa';\n// import './Navbar.css';\n\n// const Navbar = ({ scrollToSection, refs }) => {\n//   const [isMobile, setIsMobile] = useState(false);\n//   const [isMobileOpen, setIsMobileOpen] = useState(false); // Controls mobile menu open/close state\n\n//   useEffect(() => {\n//     // Check screen size to toggle between mobile and desktop menus\n//     const handleResize = () => {\n//       setIsMobile(window.innerWidth <= 932);\n//     };\n\n//     window.addEventListener('resize', handleResize);\n\n//     // Call the function initially to set the state based on the current window size\n//     handleResize();\n\n//     // Cleanup event listener on unmount\n//     return () => window.removeEventListener('resize', handleResize);\n//   }, []);\n\n//   const toggleMenu = () => {\n//     setIsMobileOpen(!isMobileOpen); // Toggle mobile menu visibility\n//   };\n\n//   return (\n//     <nav className=\"navbar\">\n//       <h1 onClick={() => scrollToSection(refs.homeRef)} className=\"navbar-title\">\n//         Shubham Deshmukh\n//       </h1>\n\n//       {/* Conditional rendering based on screen size */}\n//       {isMobile ? (\n//         <>\n//           {/* Mobile-specific part */}\n//           <div className=\"mobile-menu-icon\" onClick={toggleMenu}>\n//             {isMobileOpen ? <FaTimes /> : <FaBars />}\n//           </div>\n\n//           {isMobileOpen && (\n//             <ul className=\"nav-links-mobile\">\n//               <li onClick={() => { scrollToSection(refs.skillsRef); toggleMenu(); }}>Skills</li>\n//               <li onClick={() => { scrollToSection(refs.experienceRef); toggleMenu(); }}>Experience</li>\n//               <li onClick={() => { scrollToSection(refs.educationRef); toggleMenu(); }}>Education</li>\n//               <li onClick={() => { scrollToSection(refs.publicationsRef); toggleMenu(); }}>Publications</li>\n//               <li onClick={() => { scrollToSection(refs.projectsRef); toggleMenu(); }}>Projects</li>\n//               <li onClick={() => { scrollToSection(refs.contactRef); toggleMenu(); }}>Contact</li>\n//             </ul>\n//           )}\n//         </>\n//       ) : (\n//         <ul className=\"nav-links-desktop\">\n//           {/* Desktop-specific part */}\n//           <li onClick={() => scrollToSection(refs.skillsRef)}>Skills</li>\n//           <li onClick={() => scrollToSection(refs.experienceRef)}>Experience</li>\n//           <li onClick={() => scrollToSection(refs.educationRef)}>Education</li>\n//           <li onClick={() => scrollToSection(refs.publicationsRef)}>Publications</li>\n//           <li onClick={() => scrollToSection(refs.projectsRef)}>Projects</li>\n//           <li onClick={() => scrollToSection(refs.contactRef)}>Contact</li>\n//         </ul>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n// src/components/Navbar.js\nimport React, { useState, useEffect } from 'react';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport './Navbar.css';\n\nconst Navbar = ({ scrollToSection, refs }) => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 932);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n\n  // Handle screen resizing\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 932);\n      if (window.innerWidth > 932) setIsMobileOpen(false); // Close mobile menu on resize\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Toggle mobile menu\n  const toggleMenu = () => setIsMobileOpen(!isMobileOpen);\n\n  // Close menu after clicking a link\n  const handleNavClick = (ref) => {\n    scrollToSection(ref);\n    if (isMobile) setIsMobileOpen(false);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <h1 onClick={() => handleNavClick(refs.homeRef)} className=\"navbar-title\">\n        Shubham Deshmukh\n      </h1>\n\n      {/* Mobile Menu Icon */}\n      {isMobile ? (\n        <>\n          <button className=\"mobile-menu-icon\" onClick={toggleMenu} aria-label=\"Toggle Navigation\">\n            {isMobileOpen ? <FaTimes /> : <FaBars />}\n          </button>\n\n          <ul className={`nav-links-mobile ${isMobileOpen ? 'open' : ''}`}>\n            <li onClick={() => handleNavClick(refs.skillsRef)}>Skills</li>\n            <li onClick={() => handleNavClick(refs.experienceRef)}>Experience</li>\n            <li onClick={() => handleNavClick(refs.educationRef)}>Education</li>\n            <li onClick={() => handleNavClick(refs.publicationsRef)}>Publications</li>\n            <li onClick={() => handleNavClick(refs.projectsRef)}>Projects</li>\n            <li onClick={() => handleNavClick(refs.contactRef)}>Contact</li>\n          </ul>\n        </>\n      ) : (\n        <ul className=\"nav-links-desktop\">\n          <li onClick={() => handleNavClick(refs.skillsRef)}>Skills</li>\n          <li onClick={() => handleNavClick(refs.experienceRef)}>Experience</li>\n          <li onClick={() => handleNavClick(refs.educationRef)}>Education</li>\n          <li onClick={() => handleNavClick(refs.publicationsRef)}>Publications</li>\n          <li onClick={() => handleNavClick(refs.projectsRef)}>Projects</li>\n          <li onClick={() => handleNavClick(refs.contactRef)}>Contact</li>\n        </ul>\n      )}\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":["_ref","scrollToSection","refs","isMobile","setIsMobile","useState","window","innerWidth","isMobileOpen","setIsMobileOpen","useEffect","handleResize","addEventListener","removeEventListener","handleNavClick","ref","_jsxs","className","children","_jsx","onClick","homeRef","_Fragment","toggleMenu","FaTimes","FaBars","skillsRef","experienceRef","educationRef","publicationsRef","projectsRef","contactRef"],"sourceRoot":""}